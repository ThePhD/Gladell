#pragma once

namespace gld { namespace hlsl {

	enum class token_id {
		// Markers
		stream_begin,
		stream_end,

		// Character Tokens
		open_bracket,
		close_bracket,
		open_parenthesis,
		close_parenthesis,
		open_brace,
		close_brace,
		plus,
		minus,
		times,
		forward_slash,
		back_slash,
		colon,
		percent,
		equals,
		tilde,
		carat,
		bar,
		ampersand,
		exclamation,
		question_mark,
		single_quotation,
		double_quotation,
		period,
		comma,
		hash,
		whitespace,
		newline,

		// Preprocessor
		preprocessor_define,
		preprocessor_undef,
		preprocessor_if,
		preprocessor_elif,
		preprocessor_else,
		preprocessor_ifdef,
		preprocessor_ifndef,
		preprocessor_endif,
		preprocessor_include,
		preprocessor_line,
		preprocessor_pragma,
		preprocessor_error,
		preprocessor_pragma_pack_matrix,
		preprocessor_pragma_register_define,
		preprocessor_pragma_warning,
		preprocessor_pragma_message,

		// Reserved
		reserved_auto,
		reserved_dynamic_cast,
		reserved_const_cast,
		reserved_reinterpret_cast,
		reserved_static_cast,
		reserved_template,
		reserved_typename,
		reserved_char,
		reserved_short,
		reserved_long,
		reserved_signed,
		reserved_unsigned,
		reserved_namespace,
		reserved_enum,
		reserved_union,
		reserved_class,
		reserved_friend,
		reserved_private,
		reserved_public,
		reserved_protected,
		reserved_try,
		reserved_catch,
		reserved_default,
		reserved_new,
		reserved_delete,
		reserved_operator,
		reserved_explicit,
		reserved_goto,
		reserved_mutable,
		reserved_sizeof,
		reserved_this,
		reserved_virtual,

		// Operators, combinations of character tokens can yield these instead
		// Increment decrement operators
		increment,
		decrement,
		// Comparison operators
		less_than,
		greater_than,
		equal_to,
		not_equal_to,
		less_than_or_equal_to,
		greater_than_or_equal_to,
		// Bitwise operators...
		boolean_not,
		boolean_or,
		boolean_and,
		boolean_xor,
		left_shift,
		right_shift,
		// ~= not in the language?
		boolean_not_assignment,
		boolean_or_assignment,
		boolean_and_assignment,
		boolean_xor_assignment,
		left_shift_assignment,
		right_shift_assignment,
		// Expression operators
		expression_or,
		expression_and,
		assignment,
		// Math operators
		add,
		subtract,
		multiply,
		divide,
		modulus,
		add_assignment,
		subtract_assignment,
		multiply_assignment,
		divide_assignment,
		modulus_assignment,
		// access operators
		static_access,
		struct_access,
		trailing_dots,

		// Literals
		float_literal,
		integer_literal,
		integer_octal_literal,
		integer_hex_literal,
		character_literal,
		string_literal,
		boolean_literal,
		boolean_literal_true,
		boolean_literal_false,

		// Comments
		block_comment_begin,
		block_comment_end,
		line_comment,
		comment_text,

		// Flow control
		flow_control_if,
		flow_control_else,
		flow_control_for,
		flow_control_do,
		flow_control_while,
		flow_control_switch,
		flow_control_case,
		flow_control_break,
		flow_control_continue,
		flow_control_return,

		// Flow control modifiers
		// For/while loop modifiers
		unroll_attribute,
		loop_attribute,
		fastop_attribute,
		allow_uav_condition_attribute,

		// If / switch statement modifiers
		flatten_attribute,
		branch_attribute,
		// switch statement modifiers only
		forcecase_attribute,
		call_attribute,

		// Keywords
		keyword_sampler,
		keyword_texture,
		keyword_typedef,
		keyword_struct,
		keyword_interface,
		keyword_cbuffer,
		keyword_tbuffer,
		keyword_register,
		keyword_discard,
		keyword_const,
		keyword_packoffset,
		keyword_row_major,
		keyword_column_major,
		keyword_pass,
		keyword_technique,
		keyword_technique_sm4,
		keyword_technique_sm5,
		keyword_compile,
		keyword_vertex_shader,
		keyword_hull_shader,
		keyword_domain_shader,
		keyword_geometry_shader,
		keyword_pixel_shader,
		keyword_compute_shader,
		keyword_compile_sm4,
		keyword_vertex_shader_sm4,
		keyword_hull_shader_sm4,
		keyword_domain_shader_sm4,
		keyword_geometry_shader_sm4,
		keyword_pixel_shader_sm4,
		keyword_compute_shader_sm4,
		keyword_inline,
		keyword_static,
		keyword_extern,
		keyword_volatile,

		// Input Modifiers
		uniform,
		in,
		out,
		inout,
		unorm,
		snorm,
		// Interpolation Modifiers
		linear,
		centroid,
		nointerpolation,
		noperspective,
		sample,
		// variable modifiers / storage classes
		precise,
		shared,
		groupshared,
		clipplanes,
		maxvertexcount,

		// Geometry shader primitives
		primitive_point,
		primitive_line,
		primitive_triangle,
		primitive_lineadj,
		primitive_triangleadj,

		// Identifier
		identifier,

		// Built-in types
		type_string,
		type_matrix,
		type_vector,
		type_half,
		type_half_vector,
		type_half_matrix,
		type_dword,
		type_dword_vector,
		type_dword_matrix,
		type_float,
		type_float_vector,
		type_float_matrix,
		type_double,
		type_double_vector,
		type_double_matrix,
		type_bool,
		type_bool_vector,
		type_bool_matrix,
		type_integer,
		type_integer_vector,
		type_integer_matrix,
		type_unsigned_integer,
		type_unsigned_integer_vector,
		type_unsigned_integer_matrix,
		type_min16_integer,
		type_min16_float,
		type_min10_float,
		type_min12_integer,
		type_min16_unsigned_integer,
		type_buffer,
		type_point_stream,
		type_line_stream,
		type_triangle_stream,
		type_sampler_1d,
		type_sampler_2d,
		type_sampler_3d,
		type_sampler_cube,
		type_sampler_comparison_state,
		type_sampler_state,
		type_sampler_state_sm4,
		type_sampler_state_address_u,
		type_sampler_state_address_v,
		type_sampler_state_address_w,
		type_sampler_state_border_color,
		type_sampler_state_filter,
		type_sampler_state_max_anisotropy,
		type_sampler_state_max_lod,
		type_sampler_state_min_lod,
		type_sampler_state_mip_load_bias,
		type_sampler_comparison_state_comparison_func,
		type_texture,
		type_texture_1d,
		type_texture_1d_array,
		type_texture_2d,
		type_texture_2d_array,
		type_texture_3d,
		type_texture_cube,

		profile_vs_20,
		profile_ps_20,

		profile_vs_2a,
		profile_ps_2a,

		profile_vs_2b,
		profile_ps_2b,

		profile_vs_2sw,
		profile_ps_2sw,

		profile_vs_40_level_90,
		profile_ps_40_level_90,
		profile_lib_40_level_90,

		profile_vs_40_level_91,
		profile_ps_40_level_91,
		profile_lib_40_level_91,

		profile_vs_40_level_93,
		profile_ps_40_level_93,
		profile_lib_40_level_93,

		profile_vs_30,
		profile_ps_30,

		profile_vs_40,
		profile_gs_40,
		profile_ps_40,
		profile_cs_40,
		profile_lib_40,

		profile_vs_41,
		profile_gs_41,
		profile_ps_41,
		profile_cs_41,
		profile_lib_41,

		profile_vs_50,
		profile_ds_50,
		profile_hs_50,
		profile_gs_50,
		profile_ps_50,
		profile_cs_50,
		profile_lib_50,

		profile_vs_51,
		profile_ds_51,
		profile_hs_51,
		profile_gs_51,
		profile_ps_51,
		profile_cs_51,
		profile_lib_51,
	};

}}
